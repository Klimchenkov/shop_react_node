{"ast":null,"code":"var _jsxFileName = \"/Users/klimchenkov/Dev/Educational projects/shop_react/client/src/components/TypeBar.js\",\n    _s = $RefreshSig$();\n\nimport { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport { Context } from \"../index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TypeBar = _s(observer(_c = _s(() => {\n  _s();\n\n  const {\n    device\n  } = useContext(Context);\n  console.log(device);\n  return /*#__PURE__*/_jsxDEV(ListGroup, {\n    children: device.types.map(type => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n      active: type.id === device.selectedType.id,\n      onClick: () => device.setSelectedType(type),\n      children: type.name\n    }, type.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}, \"7NqvmAVKlrxWo1mWsul1uXNUccI=\")), \"7NqvmAVKlrxWo1mWsul1uXNUccI=\");\n\n_c2 = TypeBar;\nexport default TypeBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TypeBar$observer\");\n$RefreshReg$(_c2, \"TypeBar\");","map":{"version":3,"names":["observer","React","useContext","ListGroup","Context","TypeBar","device","console","log","types","map","type","id","selectedType","setSelectedType","name"],"sources":["/Users/klimchenkov/Dev/Educational projects/shop_react/client/src/components/TypeBar.js"],"sourcesContent":["import { observer } from 'mobx-react-lite';\nimport React, { useContext } from 'react';\nimport { ListGroup } from 'react-bootstrap';\nimport {Context} from \"../index\";\n\nconst TypeBar = observer (() => {\n    const {device} = useContext(Context)\n    console.log(device)\n    return (\n        <ListGroup>\n            {device.types.map(type =>\n                <ListGroup.Item\n                    active ={type.id === device.selectedType.id} \n                    onClick = {() => device.setSelectedType(type)}\n                    key={type.id}\n                >\n                    {type.name}\n                </ListGroup.Item>\n            )}\n        </ListGroup>\n    );\n});\n\nexport default TypeBar;"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,iBAAzB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAAQC,OAAR,QAAsB,UAAtB;;;AAEA,MAAMC,OAAO,MAAGL,QAAQ,SAAE,MAAM;EAAA;;EAC5B,MAAM;IAACM;EAAD,IAAWJ,UAAU,CAACE,OAAD,CAA3B;EACAG,OAAO,CAACC,GAAR,CAAYF,MAAZ;EACA,oBACI,QAAC,SAAD;IAAA,UACKA,MAAM,CAACG,KAAP,CAAaC,GAAb,CAAiBC,IAAI,iBAClB,QAAC,SAAD,CAAW,IAAX;MACI,MAAM,EAAGA,IAAI,CAACC,EAAL,KAAYN,MAAM,CAACO,YAAP,CAAoBD,EAD7C;MAEI,OAAO,EAAI,MAAMN,MAAM,CAACQ,eAAP,CAAuBH,IAAvB,CAFrB;MAAA,UAKKA,IAAI,CAACI;IALV,GAGSJ,IAAI,CAACC,EAHd;MAAA;MAAA;MAAA;IAAA,QADH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAaH,CAhBuB,kCAAX,iCAAb;;MAAMP,O;AAkBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}